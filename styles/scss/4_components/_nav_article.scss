@use '../0_abstracts'as *;

.articles-hint {
    ul {
        width: 80%;
        margin: auto;

        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;

        padding: 0;
    }

    &.full-width ul{
        width: 100%;
    }

    li {
        @include no-spacers;
        list-style: none;

        height: 100%;
        margin-bottom: 5rem;

        &:not(:nth-child(-n+3)) {
            @include for-phones {
                display: none;
            }
        }

        &:nth-child(-n+3) {
            @include for-phones {
                flex-basis: 30% !important;
            }
        }

        /* border: 1px solid green; */
        .squared-container {
            position: relative;
            width: 100%;
            padding: 0;
            // Trick based on the fact that padding is calculated from the with, so we can achieve to square the item
            padding-bottom: 100%;

            img {
                position: absolute;
                width: 100%;
                height: 100%;
                object-fit: cover;

                &:hover {
                    box-sizing: border-box;
                    border: 2px solid black;
                    filter: grayscale(0.7);
                    //box-shadow: 2px 2px 0 0;
                }
            }

        }

        h4 {
            @include no-spacers;
            height: 30%;
            pointer-events: none;
            font-size: medium;
            text-align: center;
        }

        a {
            &:link, 
            &:visited, 
            &:hover, 
            &:active {
                text-decoration: none;
            }
        }
    }

    //Flex basis is used to integrated spacing between elements
    //We cant use padding because we want li's width to be equals
    //specification of the class is used to define the number of columns, wich depends of the flex-basis
    &--two-columns li {
        flex-basis: 45%;
    }

    &--five-columns li {
        flex-basis: 18%;
    }
}